// Palette
$lightBlue: #8cd5fe;
$midnightExpress: #1f2a48;
$burntOrange: #fd6e34;
$sunsetOrange: #f34b41;
$fieryOrange: #ba581a;
$redOrange: #f5483a;
$gold: #febb34;
$lightGold: #f9c068;
$green: #26a158;
$darkGreen: #116132;
$lightGray: #dcdcdc;
$white: #ffffff;

$canalHeight: 8rem;
$streetHeight: 3rem;
$stampSize: 38rem;

$colors: (
  body: $redOrange,
  shade: $midnightExpress,
  house: (
    1: $lightGold,
    2: $redOrange,
    3: $gold,
    4: $lightBlue,
    5: $green
  )
);
// Get map key and subkey
@function key($map, $key, $sub-key: null) {
  @if map-has-key($map, $key) {
    $val: map-get($map, $key);
    @if $sub-key and map-has-key($val, $sub-key) {
      $val: map-get($val, $sub-key);
    }
    @return $val;
  }
  @warn "Unknown '#{$key}' in '#{$map}'.";
  @return null;
}
// Function for colors
@function color($key, $sub-key: null) {
  @return key($colors, $key, $sub-key);
}
// Clearfix
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}
// Center vertically and horizontally
@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
// Body
body {
  font-size: 62.5%;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  overflow: hidden;
  background-color: color(body);
}
// Stamp
.stamp {
  $size: $stampSize;
  $border: 1.5rem;
  $dots: 42%;
  $bgSize: 11%;
  $pos: 7%;
  position: relative;
  width: $size;
  height: $size;
  transform: translate3d(0, 0, 0);
  &::before,
  &::after {
    @include center;
    content: "";
    display: block;
    background: radial-gradient(color(body) $dots, transparent $dots + 1%),
      radial-gradient(color(body) $dots, transparent $dots + 1%), $white;
    background-size: $bgSize $bgSize;
  }
  &:before {
    width: $size;
    height: $size - $border * 2;
    border-top: $border solid $white;
    border-bottom: $border solid $white;
    background-repeat: repeat-y;
    background-position: -#{$pos} 0, $pos + 100 0;
  }
  &:after {
    width: $size - $border * 2;
    height: $size;
    background-repeat: repeat-x;
    background-position: 0 -#{$pos}, 0 $pos + 100;
  }
}
// Scene container
.scene {
  $size: 320px;
  @include center;
  position: relative;
  width: $size;
  height: $size;
  overflow: hidden;
  background-color: $lightBlue;
  background: linear-gradient(
    to bottom,
    $lightBlue,
    lighten($lightBlue, 16%) 25%,
    lighten($lightBlue, 16%)
  );
  z-index: 1;
}
// Moon
.moon {
  $size: 30px;
  position: absolute;
  top: 30px;
  left: 30px;
  width: $size;
  height: $size;
  background-color: $white;
  border-radius: 100%;
}
// Canal with street
.canal {
  position: absolute;
  bottom: 0;
  left: -50%;
  width: 200%;
  height: $canalHeight;
  border-top: color(shade) solid 25px;
  background: linear-gradient(to bottom, $lightBlue, lighten($lightBlue, 16%));
  &:after {
    content: "";
    position: absolute;
    top: 99%;
    left: 0;
    width: 100%;
    height: 150%;
    background-color: lighten($lightBlue, 16%);
  }
}
// Boat
.boat {
  $w: 6px;
  $d: 20deg;
  position: absolute;
  bottom: 29px;
  right: 100%;
  width: 75px - $w * 2;
  height: 12px;
  background-color: $green;
  transform: translateX(-20px);
  animation: sailing 8s linear infinite;
  z-index: 99;
  &:before,
  &:after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    margin: auto;
    width: $w;
    height: 100%;
    background-color: inherit;
    border-radius: 0 0 100px 100px;
  }
  &:before {
    left: -$w/2;
    transform: skewX($d);
  }
  &:after {
    right: -$w/2;
    transform: skewX(-$d);
  }
}
// Boat -- mast
.mast {
  position: absolute;
  bottom: 100%;
  left: 20px;
  width: 4px;
  height: 14px;
  background-color: $redOrange;
  &:before,
  &:after {
    content: "";
    position: absolute;
    bottom: 100%;
    border-style: solid;
  }
  // Small sail
  &:before {
    right: 100%;
    border-width: 0 0 25px 25px;
    border-color: transparent transparent $redOrange transparent;
  }
  // Large sail
  &:after {
    left: 0;
    border-width: 65px 0 0 45px;
    border-color: transparent transparent transparent $gold;
  }
}
// House vars
$windowHeight: 20px;
$doorHeight: $windowHeight + 10;
$shadeSize: 4px;
$col1: 28px;
$col2: 48px;
$col3: 68px;
$houseCols: $col1, $col2, $col3;
// Houses
.houses {
  display: flex;
  align-items: flex-end;
  position: absolute;
  left: -$col2 + -$col3;
  bottom: $canalHeight;
}
// House -- foundation
@mixin foundation($w: $col2, $h: auto, $p: 8px, $rh: 40px, $rr: 26.6deg) {
  position: relative;
  vertical-align: bottom;

  width: $w;
  height: $h;
  transform: translate3d(0, 0, 0); // -- side of house
  &:before {
    content: "";
    position: absolute;
    bottom: 0;
    left: 100%;
    width: $rh;
    height: 100%;
    background-color: $midnightExpress;
  }
  // -- roof
  .roof {
    position: absolute;
    bottom: 100%;
    left: 0;
    padding: 0 $p;
    width: 100%;
    height: $rh;
    &:before,
    &:after {
      content: "";
      position: absolute;
      bottom: 0;
      width: 100%;
      height: $rh;
      transform-origin: 100% 100%;
    }
    &:before {
      right: -$rh;
      background-color: color(shade);
      transform: skewX($rr);
    }
    &:after {
      left: 0;
      background-color: $burntOrange;
      transform: skewX(-#{$rr});
    }
  }
  // -- roof extension (hide by default)
  .roof-extension {
    display: none;
    position: absolute;
    bottom: calc(100% - 1px);
    left: 0;
    right: 0;
    margin: auto;
    &:before,
    &:after {
      content: "";
      position: absolute;
      top: 0;
    }
  }
  // -- roof window
  .roof-window {
    position: absolute;
    right: 0;
    bottom: 0;
    left: 0;
    margin: auto;
  }
  // -- chimney
  .chimney {
    position: absolute;
    right: 0;
    bottom: 100%;
    left: 50%;
    margin: auto;
    width: $shadeSize;
    height: 8px;
  }
  // -- facade and entry
  .facade,
  .entry {
    @include clearfix;
    padding: $p $p 0;
  }
  // -- windows
  .window,
  .door {
    float: left;
    display: block;
    margin: 0 $p $p 0;
    width: 12px;
    height: $windowHeight;
  }
  // -- door
  .door {
    height: $doorHeight;
    margin-bottom: 0;
    // -- door step
    &:before {
      content: "";
      position: absolute;
      bottom: -1px;
      right: 100%;
      width: $shadeSize;
      height: $shadeSize + 1;
    }
  }
  // Add properties to each col class
  @for $i from 1 through length($houseCols) {
    &.col--#{$i} {
      width: nth($houseCols, $i);
      .facade,
      .entry {
        display: flex;
        flex-wrap: wrap;
        > *:nth-child(#{$i}n) {
          margin-right: 0;
        }
        > *:nth-last-child(-n + #{$i}) {
          margin-bottom: 0;
        }
      }
    }
  }
}
// House colors
@mixin houseColors($c: $white) {
  $s: $shadeSize;
  background-color: $c;
  // -- roof extension
  .roof-extension {
    position: relative;
    background-color: $c;
    transform: translate3d(0, 0, 0);
    &:before {
      background-color: $c;
      border-color: transparent transparent $c transparent;
    }
  }
  // -- roof window
  .roof-window {
    background-color: darken($c, 20%);
    overflow: hidden;
    box-shadow: inset $s -#{$s} 0 color(shade);
  }
  // -- chimney
  .chimney {
    background-color: $c;
    box-shadow: $s 0 0 color(shade);
  }
  // -- windows/doors
  .window,
  .door {
    position: relative;
    background-color: darken($c, 20%);
    box-shadow: inset $s -#{$s} 0 color(shade);
  }
  // -- door
  .door {
    box-shadow: 0 2px 0 color(shade), inset $s -#{$s} 0 color(shade);
    &:before {
      background-color: color(shade);
    }
  }

  // -- door step
  .door:before {
    background-color: color(shade);
  }
}
// House
.house {
  @include foundation;
}
// House -- 1
.house--1 {
  @include houseColors(color(house, 1));
}
// House -- 2 (add alterations to 7)
.house--2,
.house--7 {
  @include houseColors(color(house, 2));
  .entry {
    background-color: white;
    .window {
      height: $windowHeight + 14;
    }
    .door {
      height: $doorHeight + 14;
      &:after {
        content: "";
        position: absolute;

        top: 8px;
        left: 0;
        width: 100%;
        height: $shadeSize;
        background-color: color(shade);
      }
    }
  }
}
// House -- 3
.house--3 {
  @include houseColors(color(house, 3));
  .entry {
    flex-direction: row-reverse;
    .window:nth-child(2) {
      flex: 2;
    }
    .window:nth-child(3) {
      display: none;
    }
    .door {
      margin-right: 0;
      border-radius: 60px 60px 0 0;
    }
  }
  .roof-extension {
    display: block;
    position: absolute;
    width: 20px;
    height: 16px;
    border-radius: 60px 60px 0 0;
    z-index: 1;
    &:before {
      width: 100%;
      height: 16px;
      border-radius: 60px 60px 0 0;
      z-index: 2;
    }
    &:after {
      left: 4px;
      width: 100%;
      height: 100%;
      background-color: color(shade);
      transform: skewX(-27deg);
      z-index: 1;
    }
  }
  .roof-window {
    width: 12px;
    height: 12px;
    border-radius: 100%;
    z-index: 3;
    box-shadow: none;
    &:after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 55%;
      height: 100%;
      background-color: color(shade);
    }
  }
}
// House -- 4
.house--4 {
  @include houseColors(color(house, 4));
  .entry {
    background-color: white;
  }
}
// House -- 5
.house--5 {
  @include houseColors(color(house, 5));
  .roof-extension {
    display: block;
    position: absolute;
    background-color: transparent;
    width: 100%;
    height: 20px;
    &:before {
      background-color: transparent;
      border-style: solid;
      border-width: 0 34px 20px 34px;
      z-index: 2;
    }
    &:after {
      left: 30px;
      width: 50px;

      height: 20px;
      background-color: color(shade);
      transform: skewX(-27deg);
      z-index: 1;
    }
  }
  .roof-window {
    display: block;
    top: 6px;
    left: 0;
    width: 12px;
    height: 12px;
    z-index: 3;
  }
}
// House -- 6
.house--6 {
  @include houseColors(color(house, 2));
}
// House -- 7
.house--7 {
  @include houseColors(color(house, 4));
}
// House -- 8
.house--8 {
  @include houseColors(color(house, 2));
}
// House -- 9
.house--9 {
  @include houseColors(color(house, 1));
  .entry {
    .door {
      height: $doorHeight + 6px;
      border-radius: 60px 60px 0 0;
    }
  }
}
// Wrappers
.scene-wrapper,
.boat-wrapper {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
  transform: translate3d(0, 0, 0);
}
// Global text
.text {
  position: absolute;
  top: 24px;
  right: 0;
  left: 0;
  margin: auto;
  text-align: center;
  font-family: "Helevetica", sans-serif;
  font-size: 11px;
  line-height: 1.4;
  color: rgba($white, 0.6);
  opacity: 0;
  transform: translateY(-12px);
  animation: fadeIn 1s 1s ease-out forwards;
  a {
    color: rgba($white, 0.8);
    &:hover {
      color: $white;
    }
  }
}
// States
$transSpeed: 0.8s;
$transEase: ease;
.stamp,
.scene-wrapper,
.boat-wrapper,
.moon {
  transition: transform $transSpeed * 3 $transEase;
}
.stamp:hover {
  transition: transform $transSpeed $transEase;
  .scene-wrapper,
  .boat-wrapper,
  .moon {
    transition: transform $transSpeed $transEase;
  }
}
.stamp:hover {
  transform: scale(1.3);
  .moon {
    transform: scale(1.1) translate(-6px, -8px);
  }
  .boat-wrapper {
    transform: scale(0.8) translateY(18px);
  }
  .scene-wrapper {
    transform: scale(0.65);
  }
}
// Animations
@keyframes sailing {
  from {
    transform: translateX(-$stampSize/1.8);
  }
  to {
    transform: translateX($stampSize * 1.5);
  }
}
@keyframes fadeIn {
  25% {
    transform: translateY(0);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
